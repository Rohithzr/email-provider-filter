name: Update Email Domain Lists

on:
  schedule:
    - cron: '0 6 * * *'  # Run daily at 6 AM UTC
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  update:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: Run aggregation script
      run: python scripts/aggregate.py
      
    - name: Check for changes
      id: changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add output/
        if git diff --staged --quiet; then
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No changes detected in output files"
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Changes detected in output files"
          # Set tag name for release
          echo "tag_name=v$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
          echo "release_name=Email Domains $(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push changes
      if: steps.changes.outputs.changed == 'true'
      run: |
        git commit -m "Update email domain lists - $(date '+%Y-%m-%d')"
        git push
        
    - name: Create release
      if: steps.changes.outputs.changed == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.changes.outputs.tag_name }}
        release_name: ${{ steps.changes.outputs.release_name }}
        body: |
          Daily update of email domain classifications
          
          Generated files:
          - `email_domains.json` - Complete dataset in JSON format
          - `email_domains.csv` - Complete dataset in CSV format  
          - `disposable.txt` - Disposable email domains only
          - `free.txt` - Free email provider domains only
          - `paid_personal.txt` - Paid personal email provider domains only
        draft: false
        prerelease: false
        
    - name: Job Summary
      if: steps.changes.outputs.changed == 'true'
      run: |
        echo "### Email Domain Lists Updated! ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Dataset Statistics:**" >> $GITHUB_STEP_SUMMARY
        echo "- **Total Domains:** $(cat output/email_domains.json | jq -r '.metadata.total_domains') domains" >> $GITHUB_STEP_SUMMARY
        echo "- **Disposable:** $(cat output/email_domains.json | jq -r '.metadata.categories.disposable') domains" >> $GITHUB_STEP_SUMMARY  
        echo "- **Free:** $(cat output/email_domains.json | jq -r '.metadata.categories.free') domains" >> $GITHUB_STEP_SUMMARY
        echo "- **Paid Personal:** $(cat output/email_domains.json | jq -r '.metadata.categories.paid_personal') domains" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Generated Files:**" >> $GITHUB_STEP_SUMMARY
        echo "- [\`email_domains.json\`](https://github.com/Rohithzr/email-provider-filter/blob/main/output/email_domains.json) - Complete dataset in JSON format" >> $GITHUB_STEP_SUMMARY
        echo "- [\`email_domains.csv\`](https://github.com/Rohithzr/email-provider-filter/blob/main/output/email_domains.csv) - Complete dataset in CSV format" >> $GITHUB_STEP_SUMMARY
        echo "- [\`disposable.txt\`](https://github.com/Rohithzr/email-provider-filter/blob/main/output/disposable.txt) - Disposable email domains only" >> $GITHUB_STEP_SUMMARY
        echo "- [\`free.txt\`](https://github.com/Rohithzr/email-provider-filter/blob/main/output/free.txt) - Free email provider domains only" >> $GITHUB_STEP_SUMMARY
        echo "- [\`paid_personal.txt\`](https://github.com/Rohithzr/email-provider-filter/blob/main/output/paid_personal.txt) - Paid personal email provider domains only" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Release:** [\`${{ steps.changes.outputs.tag_name }}\`](https://github.com/Rohithzr/email-provider-filter/releases/tag/${{ steps.changes.outputs.tag_name }})" >> $GITHUB_STEP_SUMMARY
        
    - name: No Changes Summary
      if: steps.changes.outputs.changed == 'false'
      run: |
        echo "### No Changes Detected âœ¨" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "All domain sources were checked but no updates were found." >> $GITHUB_STEP_SUMMARY
        echo "The existing dataset remains current." >> $GITHUB_STEP_SUMMARY